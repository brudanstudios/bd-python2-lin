import os
import sys
from distutils.version import LooseVersion


def _get_common_libs_dir():
    libs_root_dir = os.path.join(
        resources_dir, 'python', 'libs',
        '{}.{}'.format(sys.version_info.major, sys.version_info.minor)
    )
    if not os.path.exists(libs_root_dir):
        return

    return libs_root_dir


def _list_artifact_dirs(resources_dir):
    artifacts_root_dir = os.path.join(resources_dir, 'python', 'artifacts')
    if not os.path.exists(artifacts_root_dir):
        return

    install_dirs = []

    for artifact_name in os.listdir(artifacts_root_dir):

        artifact_dir = os.path.join(artifacts_root_dir, artifact_name)

        versions = os.listdir(artifact_dir)
        if not versions:
            continue

        latest_version = max(versions, key=lambda x: LooseVersion(x.lstrip('v')))

        version_dir = os.path.join(artifact_dir, latest_version)
        if version_dir not in sys.path:
            install_dirs.append(version_dir)

    return install_dirs


def main():
    pipeline_dir = os.getenv('BD_PIPELINE_DIR')
    if not pipeline_dir or not os.path.exists(pipeline_dir):
        return

    resources_dir = os.getenv('BD_RESOURCES_DIR', os.path.join(pipeline_dir, 'resources'))
    if not os.path.exists(resources_dir):
        return


    common_libs_dir = _get_common_libs_dir(resources_dir)
    if not common_libs_dir:
        return

    dirs = [common_libs_dir]
    _list_artifact_dirs(resources_dir)


main()
